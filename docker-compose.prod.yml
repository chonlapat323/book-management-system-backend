version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: book_management_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=book_management
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=11221122
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - book_management_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d book_management"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: book_management_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    labels:
      - traefik.enable=true
      - traefik.http.routers.pgadmin.rule=Host(`pgadmin.paodev.xyz`)
      - traefik.http.routers.pgadmin.entrypoints=http,https
      - traefik.http.services.pgadmin.loadbalancer.server.port=80
      - traefik.http.routers.pgadmin.tls.certresolver=letsencrypt
    networks:
      - book_management_network
      - coolify
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local

networks:
  book_management_network:
    driver: bridge
  coolify:
    external: true 